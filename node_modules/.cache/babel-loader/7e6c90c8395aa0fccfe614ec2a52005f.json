{"ast":null,"code":"var _jsxFileName = \"C:\\\\eeeeee\\\\src\\\\component\\\\Q&A\\\\Answer.js\";\nimport React from \"react\";\nimport \"./Answer.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Answer = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ques\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Question and Answer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ques1\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Question 1 : How does react work??\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"ReactJS divides the UI into isolated reusable pieces of code known as components. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 28\n          }, this), \" React components work similarly to JavaScript functions as they accept arbitrary inputs called properties or props. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 20\n          }, this), \" It's possible to have as many components as necessary without cluttering your code.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ques2\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Question 2 : Difference between props and state??\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"PROPS: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 20\n          }, this), \"The Data is passed from one component to another. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 63\n          }, this), \"It is Immutable (cannot be modified). \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 51\n          }, this), \"Props can be used with state and functional components.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"STATE: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 20\n          }, this), \"The Data is passed within the component only. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 59\n          }, this), \"It is Mutable ( can be modified). \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 47\n          }, this), \"State can be used only with the state components/class component.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"POINT DISCUSSED : \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 31\n          }, this), \"Props are used to pass data from one component to another. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 72\n          }, this), \"The state is a local data storage that is local to the component only and cannot be passed to other components. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 60\n          }, this), \"The this.setState property is used to update the state values in the component.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ques3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Question 3 : What does useEffect do without data load??\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"1. Reading from local storage. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 44\n          }, this), \"2. Registering and deregistering event listeners.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Answer;\nexport default Answer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Answer\");","map":{"version":3,"names":["React","Answer"],"sources":["C:/eeeeee/src/component/Q&A/Answer.js"],"sourcesContent":["import React from \"react\";\r\nimport \"./Answer.css\";\r\n\r\nconst Answer = () => {\r\n  return (\r\n    <div>\r\n      <div className=\"ques\">\r\n        <h1>Question and Answer</h1>\r\n        <div className=\"ques1\">\r\n          <h2>Question 1 : How does react work??</h2>\r\n          <p>\r\n            ReactJS divides the UI into isolated reusable pieces of code known\r\n            as components. <br /> React components work similarly to JavaScript\r\n            functions as they accept arbitrary inputs called properties or\r\n            props. <br /> It's possible to have as many components as necessary\r\n            without cluttering your code.\r\n          </p>\r\n        </div>\r\n        <div className=\"ques2\">\r\n          <h2>Question 2 : Difference between props and state??</h2>\r\n          <p>\r\n            PROPS: <br />\r\n            The Data is passed from one component to another. <br />\r\n            It is Immutable (cannot be modified). <br />\r\n            Props can be used with state and functional components.\r\n          </p>\r\n          <p>\r\n            STATE: <br />\r\n            The Data is passed within the component only. <br />\r\n            It is Mutable ( can be modified). <br />\r\n            State can be used only with the state components/class component.\r\n          </p>\r\n\r\n          <p>\r\n            POINT DISCUSSED : <br />\r\n            Props are used to pass data from one component to another. <br />\r\n            The state is a local data storage that is local to the component\r\n            only and cannot be passed to other components. <br />\r\n            The this.setState property is used to update the state values in the\r\n            component.\r\n          </p>\r\n        </div>\r\n        <div className=\"ques3\">\r\n          <h2>Question 3 : What does useEffect do without data load??</h2>\r\n          <p>\r\n            1. Reading from local storage. <br />\r\n            2. Registering and deregistering event listeners.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Answer;\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;;;AAEA,MAAMC,MAAM,GAAG,MAAM;EACnB,oBACE;IAAA,uBACE;MAAK,SAAS,EAAC,MAAf;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAK,SAAS,EAAC,OAAf;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAA,8GAEiB;YAAA;YAAA;YAAA;UAAA,QAFjB,wIAIS;YAAA;YAAA;YAAA;UAAA,QAJT;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF,eAYE;QAAK,SAAS,EAAC,OAAf;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAA,mCACS;YAAA;YAAA;YAAA;UAAA,QADT,qEAEoD;YAAA;YAAA;YAAA;UAAA,QAFpD,yDAGwC;YAAA;YAAA;YAAA;UAAA,QAHxC;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF,eAQE;UAAA,mCACS;YAAA;YAAA;YAAA;UAAA,QADT,iEAEgD;YAAA;YAAA;YAAA;UAAA,QAFhD,qDAGoC;YAAA;YAAA;YAAA;UAAA,QAHpC;QAAA;UAAA;UAAA;UAAA;QAAA,QARF,eAeE;UAAA,8CACoB;YAAA;YAAA;YAAA;UAAA,QADpB,8EAE6D;YAAA;YAAA;YAAA;UAAA,QAF7D,mIAIiD;YAAA;YAAA;YAAA;UAAA,QAJjD;QAAA;UAAA;UAAA;UAAA;QAAA,QAfF;MAAA;QAAA;QAAA;QAAA;MAAA,QAZF,eAoCE;QAAK,SAAS,EAAC,OAAf;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAA,2DACiC;YAAA;YAAA;YAAA;UAAA,QADjC;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QApCF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAgDD,CAjDD;;KAAMA,M;AAmDN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}